// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAppi.Sevices;

#nullable disable

namespace WebAppi.Migrations
{
    [DbContext(typeof(SuperDBContext))]
    [Migration("20240726123558_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAppi.Entities.CocksickDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("PercentSera")
                        .HasColumnType("double precision");

                    b.Property<double>("PercentValotiles")
                        .HasColumnType("double precision");

                    b.Property<double>("PercentZola")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Cocsicks");
                });

            modelBuilder.Entity("WebAppi.Entities.DefaultPreset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CocksickId")
                        .HasColumnType("integer");

                    b.Property<int>("FluxAdditionsId")
                        .HasColumnType("integer");

                    b.Property<int>("MmkCoefId")
                        .HasColumnType("integer");

                    b.Property<int>("StartEnterId")
                        .HasColumnType("integer");

                    b.Property<int>("ZolaOfCocsickId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CocksickId");

                    b.HasIndex("FluxAdditionsId");

                    b.HasIndex("MmkCoefId");

                    b.HasIndex("StartEnterId");

                    b.HasIndex("ZolaOfCocsickId");

                    b.ToTable("DefaultPresets");
                });

            modelBuilder.Entity("WebAppi.Entities.FluxAdditionsDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("DolomyteAl2O3")
                        .HasColumnType("double precision");

                    b.Property<double>("DolomyteCaO")
                        .HasColumnType("double precision");

                    b.Property<double>("DolomyteMgO")
                        .HasColumnType("double precision");

                    b.Property<double>("DolomyteSiO2")
                        .HasColumnType("double precision");

                    b.Property<double>("IzvestnyakAl2O3")
                        .HasColumnType("double precision");

                    b.Property<double>("IzvestnyakCaO")
                        .HasColumnType("double precision");

                    b.Property<double>("IzvestnyakMgO")
                        .HasColumnType("double precision");

                    b.Property<double>("IzvestnyakSiO2")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("FluxAdditions");
                });

            modelBuilder.Entity("WebAppi.Entities.MmkCoefDB", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double>("Al2O3Coef")
                        .HasColumnType("double precision");

                    b.Property<double>("CaOCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("FeCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("MgOCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("MnOCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("PCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("PMPPCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("SCoef")
                        .HasColumnType("double precision");

                    b.Property<double>("SiO2Coef")
                        .HasColumnType("double precision");

                    b.Property<double>("TiO2Coef")
                        .HasColumnType("double precision");

                    b.Property<double>("ZnCoef")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.ToTable("MmkCoefs");
                });

            modelBuilder.Entity("WebAppi.Entities.ShihtaComponentsDB", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<double>("Al2O3")
                        .HasColumnType("double precision");

                    b.Property<double>("CaO")
                        .HasColumnType("double precision");

                    b.Property<double>("Cr")
                        .HasColumnType("double precision");

                    b.Property<double>("Fe")
                        .HasColumnType("double precision");

                    b.Property<double>("FeO")
                        .HasColumnType("double precision");

                    b.Property<double>("MgO")
                        .HasColumnType("double precision");

                    b.Property<double>("MnO")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("P")
                        .HasColumnType("double precision");

                    b.Property<double>("PMPP")
                        .HasColumnType("double precision");

                    b.Property<int>("PresetId")
                        .HasColumnType("integer");

                    b.Property<double>("S")
                        .HasColumnType("double precision");

                    b.Property<double>("SiO2")
                        .HasColumnType("double precision");

                    b.Property<double>("TiO2")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.Property<double>("Wet")
                        .HasColumnType("double precision");

                    b.Property<double>("Zn")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.HasIndex("PresetId");

                    b.ToTable("ShihtaComponents");
                });

            modelBuilder.Entity("WebAppi.Entities.StartEnterDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("DolomyteInAgl")
                        .HasColumnType("double precision");

                    b.Property<double>("FeOinAgl")
                        .HasColumnType("double precision");

                    b.Property<double>("osnovnost")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("StartEnters");
                });

            modelBuilder.Entity("WebAppi.Entities.ZolaOfCocsickDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Al2O3")
                        .HasColumnType("double precision");

                    b.Property<double>("CaO")
                        .HasColumnType("double precision");

                    b.Property<double>("Fe")
                        .HasColumnType("double precision");

                    b.Property<double>("MgO")
                        .HasColumnType("double precision");

                    b.Property<double>("P")
                        .HasColumnType("double precision");

                    b.Property<double>("SiO2")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("ZolaOfCocsicks");
                });

            modelBuilder.Entity("WebAppi.Entities.DefaultPreset", b =>
                {
                    b.HasOne("WebAppi.Entities.CocksickDB", "Cocksick")
                        .WithMany()
                        .HasForeignKey("CocksickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppi.Entities.FluxAdditionsDB", "FluxAdditions")
                        .WithMany()
                        .HasForeignKey("FluxAdditionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppi.Entities.MmkCoefDB", "MmkCoef")
                        .WithMany()
                        .HasForeignKey("MmkCoefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppi.Entities.StartEnterDB", "StartEnter")
                        .WithMany()
                        .HasForeignKey("StartEnterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAppi.Entities.ZolaOfCocsickDB", "ZolaOfCocksick")
                        .WithMany()
                        .HasForeignKey("ZolaOfCocsickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cocksick");

                    b.Navigation("FluxAdditions");

                    b.Navigation("MmkCoef");

                    b.Navigation("StartEnter");

                    b.Navigation("ZolaOfCocksick");
                });

            modelBuilder.Entity("WebAppi.Entities.ShihtaComponentsDB", b =>
                {
                    b.HasOne("WebAppi.Entities.DefaultPreset", "Preset")
                        .WithMany("ShihtaComponents")
                        .HasForeignKey("PresetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Preset");
                });

            modelBuilder.Entity("WebAppi.Entities.DefaultPreset", b =>
                {
                    b.Navigation("ShihtaComponents");
                });
#pragma warning restore 612, 618
        }
    }
}
